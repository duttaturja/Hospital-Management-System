openapi: 3.0.3
info:
  title: Hospital Management System API
  version: 1.0.0
  description: Api documentation for Hospital Management System made by ProbalSourav
    and duttaturja
paths:
  /api/bill/invoices/:
    get:
      operationId: api_bill_invoices_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceList'
          description: ''
    post:
      operationId: api_bill_invoices_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/bill/invoices/{id}/:
    get:
      operationId: api_bill_invoices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    put:
      operationId: api_bill_invoices_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    patch:
      operationId: api_bill_invoices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    delete:
      operationId: api_bill_invoices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/bill/salaries/:
    get:
      operationId: api_bill_salaries_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSalaryList'
          description: ''
    post:
      operationId: api_bill_salaries_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Salary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Salary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Salary'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salary'
          description: ''
  /api/bill/salaries/{id}/:
    get:
      operationId: api_bill_salaries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salary'
          description: ''
    put:
      operationId: api_bill_salaries_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Salary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Salary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Salary'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salary'
          description: ''
    patch:
      operationId: api_bill_salaries_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSalary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSalary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSalary'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salary'
          description: ''
    delete:
      operationId: api_bill_salaries_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/doctor/appointments/:
    get:
      operationId: api_doctor_appointments_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/doctor/appointments/manage/:
    post:
      operationId: api_doctor_appointments_manage_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_doctor_appointments_manage_partial_update
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/doctor/appointments/manage/{id}/:
    post:
      operationId: api_doctor_appointments_manage_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_doctor_appointments_manage_partial_update_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/doctor/profile/:
    get:
      operationId: api_doctor_profile_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_doctor_profile_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/nurse/patient-updates/:
    get:
      operationId: api_nurse_patient_updates_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_nurse_patient_updates_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/nurse/room-assignments/:
    get:
      operationId: api_nurse_room_assignments_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_nurse_room_assignments_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/patient/admissions/:
    get:
      operationId: api_patient_admissions_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_patient_admissions_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/patient/appointments/:
    get:
      operationId: api_patient_appointments_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_patient_appointments_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/patient/profile/:
    get:
      operationId: api_patient_profile_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_patient_profile_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/records/all-records/:
    get:
      operationId: api_records_all_records_list
      parameters:
      - in: query
        name: admission_date_after
        schema:
          type: string
          format: date
      - in: query
        name: admission_date_before
        schema:
          type: string
          format: date
      - in: query
        name: discharge_date_after
        schema:
          type: string
          format: date
      - in: query
        name: discharge_date_before
        schema:
          type: string
          format: date
      - in: query
        name: doctor
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: room_number
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientRecordList'
          description: ''
    post:
      operationId: api_records_all_records_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientRecord'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientRecord'
          description: ''
  /api/records/records/:
    get:
      operationId: api_records_records_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_records_records_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_records_records_update
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/records/records/{id}/:
    get:
      operationId: api_records_records_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientRecord'
          description: ''
    put:
      operationId: api_records_records_update_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientRecord'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientRecord'
          description: ''
    patch:
      operationId: api_records_records_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPatientRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPatientRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPatientRecord'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientRecord'
          description: ''
    delete:
      operationId: api_records_records_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/rooms/rooms/:
    get:
      operationId: api_rooms_rooms_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_rooms_rooms_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/rooms/rooms/bookings/:
    get:
      operationId: api_rooms_rooms_bookings_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_rooms_rooms_bookings_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_rooms_rooms_bookings_update
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/staff/profiles/:
    get:
      operationId: api_staff_profiles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffProfileList'
          description: ''
    post:
      operationId: api_staff_profiles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffProfile'
          description: ''
  /api/staff/profiles/{id}/:
    get:
      operationId: api_staff_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffProfile'
          description: ''
    put:
      operationId: api_staff_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffProfile'
          description: ''
    patch:
      operationId: api_staff_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffProfile'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffProfile'
          description: ''
    delete:
      operationId: api_staff_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/staff/tasks/:
    get:
      operationId: api_staff_tasks_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
    post:
      operationId: api_staff_tasks_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/staff/tasks/{id}/:
    get:
      operationId: api_staff_tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: api_staff_tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: api_staff_tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: api_staff_tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/user/admin/details/:
    get:
      operationId: api_user_admin_details_retrieve
      description: Retrieve details of the logged-in admin user.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/user/admin/login/:
    post:
      operationId: api_user_admin_login_create
      description: Login as an Admin user.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/user/admin/logout/:
    post:
      operationId: api_user_admin_logout_create
      description: Logout the logged-in admin user.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/user/admin/register/:
    post:
      operationId: api_user_admin_register_create
      description: Register a new user with an Admin role.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/user/details/:
    get:
      operationId: api_user_details_retrieve
      description: Retrieve details of the logged-in user.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/login/:
    post:
      operationId: api_user_login_create
      description: Login as a Patient user.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/user/logout/:
    post:
      operationId: api_user_logout_create
      description: Logout the logged-in user.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/user/register/:
    post:
      operationId: api_user_register_create
      description: Register a new user as a Patient.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
components:
  schemas:
    AdminUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          maxLength: 128
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - password
      - role
      - username
    Invoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient:
          type: integer
        issued_date:
          type: string
          format: date
          readOnly: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
      required:
      - description
      - id
      - issued_date
      - patient
      - total_amount
    PaginatedInvoiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    PaginatedPatientRecordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PatientRecord'
    PaginatedSalaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Salary'
    PaginatedStaffProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffProfile'
    PaginatedTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    PatchedInvoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient:
          type: integer
        issued_date:
          type: string
          format: date
          readOnly: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
    PatchedPatientRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        admission_date:
          type: string
          format: date
        discharge_date:
          type: string
          format: date
          nullable: true
        diagnosis:
          type: string
        treatment:
          type: string
        doctor:
          type: integer
          nullable: true
        doctor_name:
          type: string
          readOnly: true
    PatchedSalary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/SalaryStatusEnum'
    PatchedStaffProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        department:
          type: string
          maxLength: 100
        job_title:
          type: string
          maxLength: 100
        experience_years:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        contact_number:
          type: string
          maxLength: 15
        salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
    PatchedTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        staff:
          type: integer
        task_name:
          type: string
          maxLength: 255
        description:
          type: string
        assigned_by:
          type: integer
          nullable: true
        assigned_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
    PatientRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        admission_date:
          type: string
          format: date
        discharge_date:
          type: string
          format: date
          nullable: true
        diagnosis:
          type: string
        treatment:
          type: string
        doctor:
          type: integer
          nullable: true
        doctor_name:
          type: string
          readOnly: true
      required:
      - admission_date
      - created_by
      - created_by_name
      - diagnosis
      - doctor_name
      - id
      - treatment
    RoleEnum:
      enum:
      - Patient
      - Nurse
      - Doctor
      - Admin
      - Staff
      type: string
      description: |-
        * `Patient` - Patient
        * `Nurse` - Nurse
        * `Doctor` - Doctor
        * `Admin` - Admin
        * `Staff` - Staff
    Salary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/SalaryStatusEnum'
      required:
      - amount
      - id
      - payment_date
      - user
    SalaryStatusEnum:
      enum:
      - Paid
      - Pending
      type: string
      description: |-
        * `Paid` - Paid
        * `Pending` - Pending
    StaffProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        department:
          type: string
          maxLength: 100
        job_title:
          type: string
          maxLength: 100
        experience_years:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        contact_number:
          type: string
          maxLength: 15
        salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - contact_number
      - department
      - experience_years
      - id
      - job_title
      - salary
      - user
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        staff:
          type: integer
        task_name:
          type: string
          maxLength: 255
        description:
          type: string
        assigned_by:
          type: integer
          nullable: true
        assigned_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
      required:
      - assigned_at
      - description
      - id
      - staff
      - task_name
    TaskStatusEnum:
      enum:
      - Pending
      - In Progress
      - Completed
      type: string
      description: |-
        * `Pending` - Pending
        * `In Progress` - In Progress
        * `Completed` - Completed
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          maxLength: 128
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - password
      - role
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
